---

- name: Tomcat | Delete pre-installed folders in webapps
  file:
    path: "{{ tomcat_webapps_path }}/{{ item.key }}/"
    state: absent
  with_dict: "{{ tomcat_pre_installed_folders_deployed }}"
  when: 'not item.value.deployed'

- name: Tomcat | Copy tomcat config
  template:
    src: "{{ tomcat_conf_templates | selectattr('src', 'equalto', item) | map(attribute='src') | first }}"
    dest: "{{ tomcat_conf_templates | selectattr('src', 'equalto', item) | map(attribute='dest') | first }}"
    mode: 0640
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
  with_items: "{{ tomcat_conf_templates | map(attribute='src') | difference(tomcat_extra_conf_files) | list }}"
  notify: restart tomcat

- name: Tomcat | Ensure extra tomcat config file and template paths exists
  file:
    path: "{{ tomcat_conf_path }}/{{ item.path }}"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: 0640
  with_filetree:
    - "{{ tomcat_extra_conf_path }}/"
    - "{{ tomcat_extra_conf_template_path }}/"
  when: item.state == "directory"
  notify: restart tomcat

- name: Tomcat | Copy extra tomcat config files (provided by playbooks)
  copy:
    src: "{{ item.src }}"
    dest: "{{ tomcat_conf_path }}/{{ item.path }}"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: 0640
  with_filetree:
    - "{{ tomcat_extra_conf_path }}/"
  when: item.state == "file"
  notify: restart tomcat

- name: Tomcat | Copy extra tomcat config templates (provided by playbooks)
  template:
    src: "{{ item.src }}"
    dest: "{{ tomcat_conf_path }}/{{ item.path | splitext | first }}"  # This is to remove .j2 extension
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: 0640
  with_filetree:
    - "{{ tomcat_extra_conf_template_path }}/"
  when: item.state == "file"
  notify: restart tomcat
